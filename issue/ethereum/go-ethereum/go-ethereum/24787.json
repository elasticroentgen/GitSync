{
  "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787",
  "repository_url": "https://api.github.com/repos/ethereum/go-ethereum",
  "labels_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787/comments",
  "events_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787/events",
  "html_url": "https://github.com/ethereum/go-ethereum/issues/24787",
  "id": 1219420540,
  "node_id": "I_kwDOAOvK985IruF8",
  "number": 24787,
  "title": "Push filter updates in batch on new block",
  "user": {
    "login": "pokrovskyy",
    "id": 1635058,
    "node_id": "MDQ6VXNlcjE2MzUwNTg=",
    "avatar_url": "https://avatars.githubusercontent.com/u/1635058?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pokrovskyy",
    "html_url": "https://github.com/pokrovskyy",
    "followers_url": "https://api.github.com/users/pokrovskyy/followers",
    "following_url": "https://api.github.com/users/pokrovskyy/following{/other_user}",
    "gists_url": "https://api.github.com/users/pokrovskyy/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pokrovskyy/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pokrovskyy/subscriptions",
    "organizations_url": "https://api.github.com/users/pokrovskyy/orgs",
    "repos_url": "https://api.github.com/users/pokrovskyy/repos",
    "events_url": "https://api.github.com/users/pokrovskyy/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pokrovskyy/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 72233652,
      "node_id": "MDU6TGFiZWw3MjIzMzY1Mg==",
      "url": "https://api.github.com/repos/ethereum/go-ethereum/labels/type:feature",
      "name": "type:feature",
      "color": "84b6eb",
      "default": false,
      "description": null
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": {
    "login": "karalabe",
    "id": 129561,
    "node_id": "MDQ6VXNlcjEyOTU2MQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/karalabe",
    "html_url": "https://github.com/karalabe",
    "followers_url": "https://api.github.com/users/karalabe/followers",
    "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
    "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
    "organizations_url": "https://api.github.com/users/karalabe/orgs",
    "repos_url": "https://api.github.com/users/karalabe/repos",
    "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
    "received_events_url": "https://api.github.com/users/karalabe/received_events",
    "type": "User",
    "site_admin": false
  },
  "assignees": [
    {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    }
  ],
  "milestone": null,
  "comments": 7,
  "created_at": "2022-04-28T23:03:04Z",
  "updated_at": "2022-07-25T06:03:34Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "# Rationale\r\n\r\nWhen block arrives, it is often important to calculate new state for contracts you are interested in, and then act upon the new total state. This means that ALL logs from the defined filter must be processed before moving to interpretation phase. \r\n\r\nThe two approaches to partially achieve this are:\r\n- create filter and poll for updates upon new block. The problem is 1) polling takes extra time 2) sometimes not all logs are returned right away and you have to re-poll (as if geth is still processing them)\r\n- subscribe for logs. The problem is you get logs one-by-one and thus never know when its all done\r\n\r\n# Suggested Solution\r\n\r\nAdd subscription type to get logs in batches once logs processing finished for the block. Getting such message could reliably mean that this is all the state changes for last   block we are interested in, and we can start further decision making. ",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114147344",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24787#issuecomment-1114147344",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787",
    "id": 1114147344,
    "node_id": "IC_kwDOAOvK985CaIoQ",
    "user": {
      "login": "eval-exec",
      "id": 46400566,
      "node_id": "MDQ6VXNlcjQ2NDAwNTY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/46400566?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eval-exec",
      "html_url": "https://github.com/eval-exec",
      "followers_url": "https://api.github.com/users/eval-exec/followers",
      "following_url": "https://api.github.com/users/eval-exec/following{/other_user}",
      "gists_url": "https://api.github.com/users/eval-exec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eval-exec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eval-exec/subscriptions",
      "organizations_url": "https://api.github.com/users/eval-exec/orgs",
      "repos_url": "https://api.github.com/users/eval-exec/repos",
      "events_url": "https://api.github.com/users/eval-exec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eval-exec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T06:30:31Z",
    "updated_at": "2022-05-01T06:31:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "@pokrovskyy  What do you think on how to handle removed event logs caused by chain reorg? I",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114147344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114160816",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24787#issuecomment-1114160816",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787",
    "id": 1114160816,
    "node_id": "IC_kwDOAOvK985CaL6w",
    "user": {
      "login": "terapi09",
      "id": 84198193,
      "node_id": "MDQ6VXNlcjg0MTk4MTkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84198193?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/terapi09",
      "html_url": "https://github.com/terapi09",
      "followers_url": "https://api.github.com/users/terapi09/followers",
      "following_url": "https://api.github.com/users/terapi09/following{/other_user}",
      "gists_url": "https://api.github.com/users/terapi09/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/terapi09/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/terapi09/subscriptions",
      "organizations_url": "https://api.github.com/users/terapi09/orgs",
      "repos_url": "https://api.github.com/users/terapi09/repos",
      "events_url": "https://api.github.com/users/terapi09/events{/privacy}",
      "received_events_url": "https://api.github.com/users/terapi09/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T07:48:55Z",
    "updated_at": "2022-05-01T07:48:55Z",
    "author_association": "NONE",
    "body": "Neden",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114160816/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114266398",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24787#issuecomment-1114266398",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787",
    "id": 1114266398,
    "node_id": "IC_kwDOAOvK985Calse",
    "user": {
      "login": "FreshKhalifa347",
      "id": 104649109,
      "node_id": "U_kgDOBjzRlQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/104649109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FreshKhalifa347",
      "html_url": "https://github.com/FreshKhalifa347",
      "followers_url": "https://api.github.com/users/FreshKhalifa347/followers",
      "following_url": "https://api.github.com/users/FreshKhalifa347/following{/other_user}",
      "gists_url": "https://api.github.com/users/FreshKhalifa347/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FreshKhalifa347/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FreshKhalifa347/subscriptions",
      "organizations_url": "https://api.github.com/users/FreshKhalifa347/orgs",
      "repos_url": "https://api.github.com/users/FreshKhalifa347/repos",
      "events_url": "https://api.github.com/users/FreshKhalifa347/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FreshKhalifa347/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T15:31:40Z",
    "updated_at": "2022-05-02T06:05:28Z",
    "author_association": "NONE",
    "body": "We noticed This is due to a synchronized error on your account, Your\naccount has encountered a down hitting with hash script due to service\nerror and glitch.. Your account would need to be Synchronized\n\n\n\n\n\n\nOn Sun, May 1, 2022 at 8:32 AM EXEC ***@***.***> wrote:\n\n> @pokrovskyy <https://github.com/pokrovskyy> What do you think on how to\n> handle removed event logs caused by chan reorg?\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/24787#issuecomment-1114147344>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AY6NDFJYVJC7ZSEAZSSPBNLVHYQQXANCNFSM5UUAIWPA>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114266398/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114266510",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24787#issuecomment-1114266510",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787",
    "id": 1114266510,
    "node_id": "IC_kwDOAOvK985CaluO",
    "user": {
      "login": "FreshKhalifa347",
      "id": 104649109,
      "node_id": "U_kgDOBjzRlQ",
      "avatar_url": "https://avatars.githubusercontent.com/u/104649109?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FreshKhalifa347",
      "html_url": "https://github.com/FreshKhalifa347",
      "followers_url": "https://api.github.com/users/FreshKhalifa347/followers",
      "following_url": "https://api.github.com/users/FreshKhalifa347/following{/other_user}",
      "gists_url": "https://api.github.com/users/FreshKhalifa347/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FreshKhalifa347/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FreshKhalifa347/subscriptions",
      "organizations_url": "https://api.github.com/users/FreshKhalifa347/orgs",
      "repos_url": "https://api.github.com/users/FreshKhalifa347/repos",
      "events_url": "https://api.github.com/users/FreshKhalifa347/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FreshKhalifa347/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-01T15:32:08Z",
    "updated_at": "2022-05-02T06:05:29Z",
    "author_association": "NONE",
    "body": "This processing is almost completed on your account here in our database\nsystem now but you have to comply with the confirmatory requirement fee for\nus to proceed now\n\n\n\n\n\n\nOn Sun, May 1, 2022 at 9:51 AM terapi09 ***@***.***> wrote:\n\n> Neden\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/ethereum/go-ethereum/issues/24787#issuecomment-1114160816>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AY6NDFIC6YIGHOZTS3I55HDVHYZWNANCNFSM5UUAIWPA>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1114266510/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1118333473",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24787#issuecomment-1118333473",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787",
    "id": 1118333473,
    "node_id": "IC_kwDOAOvK985CqGoh",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T09:07:20Z",
    "updated_at": "2022-05-05T09:07:20Z",
    "author_association": "MEMBER",
    "body": "We already process blocks fully and then emit logs, but since those get filtered and only the matches returned, it's not trivial to signal the end. It gets a bit more convoluted due to logs getting batch delivered internally in case of reorgs, or larger chain head jump (post merge world). The logs should still be in order and we should be able to somehow set a marker when a block finishes and the next begins though.\r\n\r\nLet's experiment with it and get back to you.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1118333473/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1118335970",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24787#issuecomment-1118335970",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787",
    "id": 1118335970,
    "node_id": "IC_kwDOAOvK985CqHPi",
    "user": {
      "login": "karalabe",
      "id": 129561,
      "node_id": "MDQ6VXNlcjEyOTU2MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/129561?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/karalabe",
      "html_url": "https://github.com/karalabe",
      "followers_url": "https://api.github.com/users/karalabe/followers",
      "following_url": "https://api.github.com/users/karalabe/following{/other_user}",
      "gists_url": "https://api.github.com/users/karalabe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/karalabe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/karalabe/subscriptions",
      "organizations_url": "https://api.github.com/users/karalabe/orgs",
      "repos_url": "https://api.github.com/users/karalabe/repos",
      "events_url": "https://api.github.com/users/karalabe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/karalabe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-05-05T09:10:18Z",
    "updated_at": "2022-05-05T09:10:18Z",
    "author_association": "MEMBER",
    "body": "Ie. we need to annotate https://github.com/ethereum/go-ethereum/blob/master/eth/filters/api.go#L260 with an ephemeral wrapper to add a marker to every last log in a block (i.e. next block hash is different or very last in the slice).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1118335970/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1193617182",
    "html_url": "https://github.com/ethereum/go-ethereum/issues/24787#issuecomment-1193617182",
    "issue_url": "https://api.github.com/repos/ethereum/go-ethereum/issues/24787",
    "id": 1193617182,
    "node_id": "IC_kwDOAOvK985HJSce",
    "user": {
      "login": "kaber2",
      "id": 34914579,
      "node_id": "MDQ6VXNlcjM0OTE0NTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/34914579?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaber2",
      "html_url": "https://github.com/kaber2",
      "followers_url": "https://api.github.com/users/kaber2/followers",
      "following_url": "https://api.github.com/users/kaber2/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaber2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaber2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaber2/subscriptions",
      "organizations_url": "https://api.github.com/users/kaber2/orgs",
      "repos_url": "https://api.github.com/users/kaber2/repos",
      "events_url": "https://api.github.com/users/kaber2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaber2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-25T06:03:34Z",
    "updated_at": "2022-07-25T06:03:34Z",
    "author_association": "NONE",
    "body": "> We already process blocks fully and then emit logs, but since those get filtered and only the matches returned, it's not trivial to signal the end. It gets a bit more convoluted due to logs getting batch delivered internally in case of reorgs, or larger chain head jump (post merge world). The logs should still be in order and we should be able to somehow set a marker when a block finishes and the next begins though.\r\n> \r\n> Let's experiment with it and get back to you.\r\n\r\nI'm agree this would be very nice to have and avoid some guessing work in the event receiver. However I don't think just a marker will be enough. When the filter doesn't have any matches within a block, the receiver still wouldn't know whether a) no events exist or b) they just haven't arrived yet. So I personally would very much prefer the solution @pokrovskyy suggested, emitting a batch notification for every block that might also contain no logs at all.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/go-ethereum/issues/comments/1193617182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]

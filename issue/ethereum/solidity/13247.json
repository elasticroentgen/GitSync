{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13247/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13247/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13247/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13247",
  "id": 1294081031,
  "node_id": "I_kwDOAm_5kc5NIhwH",
  "number": 13247,
  "title": "Assembly language feature: add new levels for Yul",
  "user": {
    "login": "pcaversaccio",
    "id": 25297591,
    "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
    "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/pcaversaccio",
    "html_url": "https://github.com/pcaversaccio",
    "followers_url": "https://api.github.com/users/pcaversaccio/followers",
    "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
    "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
    "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
    "repos_url": "https://api.github.com/users/pcaversaccio/repos",
    "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 692642590,
      "node_id": "MDU6TGFiZWw2OTI2NDI1OTA=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/feature",
      "name": "feature",
      "color": "fbca04",
      "default": false,
      "description": null
    },
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 9,
  "created_at": "2022-07-05T10:05:48Z",
  "updated_at": "2022-07-20T10:10:14Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nAdd new levels for Yul: **Yul+** being a higher-level version and **Yul-** being a lower-level version.\r\n\r\n## Motivation\r\n\r\nThe current version of Yul can be viewed as a pretty high-level assembly language since it provides e.g. no access to stack and control flow instructions. I open this issue to initiate a discussion on adding potential new levels to the current version of Yul. The idea started with my Twitter thread [here](https://twitter.com/pcaversaccio/status/1541529156504231938) and feedback by @leonardoalt. The current idea is to add new levels of Yul: **Yul+** being a higher-level version and **Yul-** being a lower-level version with more compilation stack layers. Building something similar to LLVM IR would be really nice.",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13247/reactions",
    "total_count": 6,
    "+1": 6,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13247/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1174892681",
    "html_url": "https://github.com/ethereum/solidity/issues/13247#issuecomment-1174892681",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
    "id": 1174892681,
    "node_id": "IC_kwDOAm_5kc5GB3CJ",
    "user": {
      "login": "axic",
      "id": 20340,
      "node_id": "MDQ6VXNlcjIwMzQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20340?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/axic",
      "html_url": "https://github.com/axic",
      "followers_url": "https://api.github.com/users/axic/followers",
      "following_url": "https://api.github.com/users/axic/following{/other_user}",
      "gists_url": "https://api.github.com/users/axic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/axic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/axic/subscriptions",
      "organizations_url": "https://api.github.com/users/axic/orgs",
      "repos_url": "https://api.github.com/users/axic/repos",
      "events_url": "https://api.github.com/users/axic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/axic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T10:23:22Z",
    "updated_at": "2022-07-05T10:23:22Z",
    "author_association": "MEMBER",
    "body": "In fact we already did this 2-3 years ago, when we discussed \"Yul++\" ([see this hackmd](https://hackmd.io/Hj2z5Rm3Qj-2g8Ct9GOpSQ)) upon prompt by @SilentCicero, which eventually turned into [yulp](https://github.com/FuelLabs/yulp).\r\n\r\nWhat other Yul+ do you have in mind?\r\n\r\nRegarding the lower-level we did had similar discussions in mind over the years, last when the new stack allocator was created and it turned unneeded.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1174892681/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1174954152",
    "html_url": "https://github.com/ethereum/solidity/issues/13247#issuecomment-1174954152",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
    "id": 1174954152,
    "node_id": "IC_kwDOAm_5kc5GCGCo",
    "user": {
      "login": "pcaversaccio",
      "id": 25297591,
      "node_id": "MDQ6VXNlcjI1Mjk3NTkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25297591?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pcaversaccio",
      "html_url": "https://github.com/pcaversaccio",
      "followers_url": "https://api.github.com/users/pcaversaccio/followers",
      "following_url": "https://api.github.com/users/pcaversaccio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pcaversaccio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pcaversaccio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pcaversaccio/subscriptions",
      "organizations_url": "https://api.github.com/users/pcaversaccio/orgs",
      "repos_url": "https://api.github.com/users/pcaversaccio/repos",
      "events_url": "https://api.github.com/users/pcaversaccio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pcaversaccio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T11:32:07Z",
    "updated_at": "2022-07-05T11:32:07Z",
    "author_association": "NONE",
    "body": "Thanks, I'm aware of yulp which is however not maintained by the Solidity team if I understand correctly and there is also no active development going on (the repo is even archived). So in terms of design, I must admit I actually like yulp and could be a good starting point for Yul+.\r\n\r\nRegarding the low-level version I have the following points to mention:\r\n- Usually, an assembly language provides access to stack and control flow instructions, Yul does currently not.\r\n- IMO to make Solidity/Yul more competitive with Vyper. One reason why Vyper can outperform seemingly well-optimized Yul is that Yul is still a high-level language and the Yul compiler still has to do stack scheduling, control flow analysis etc. Allowing for direct control flow via JUMPs and access to stack via e.g. SWAP or DUP could help to write even more efficient contracts.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1174954152/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175089978",
    "html_url": "https://github.com/ethereum/solidity/issues/13247#issuecomment-1175089978",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
    "id": 1175089978,
    "node_id": "IC_kwDOAm_5kc5GCnM6",
    "user": {
      "login": "Vectorized",
      "id": 5889274,
      "node_id": "MDQ6VXNlcjU4ODkyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5889274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Vectorized",
      "html_url": "https://github.com/Vectorized",
      "followers_url": "https://api.github.com/users/Vectorized/followers",
      "following_url": "https://api.github.com/users/Vectorized/following{/other_user}",
      "gists_url": "https://api.github.com/users/Vectorized/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Vectorized/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Vectorized/subscriptions",
      "organizations_url": "https://api.github.com/users/Vectorized/orgs",
      "repos_url": "https://api.github.com/users/Vectorized/repos",
      "events_url": "https://api.github.com/users/Vectorized/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Vectorized/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T13:54:46Z",
    "updated_at": "2022-07-05T14:00:15Z",
    "author_association": "NONE",
    "body": "I’m in for more access to more lower level stuff. \r\n\r\nUnless switch statements can be auto optimized to be as efficient as jump tables. \r\n\r\nI’ve written a Yul based sort (https://gist.github.com/Vectorized/7b3a1fff3832bad126fdcba0ae785275) that costs 2x more gas compared to the 1st and 2nd place entries  of 2018’s Solidity golfing contest (the top 2 entires abuse jump tables extensively to implement sorting networks efficiently). ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175089978/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175209426",
    "html_url": "https://github.com/ethereum/solidity/issues/13247#issuecomment-1175209426",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
    "id": 1175209426,
    "node_id": "IC_kwDOAm_5kc5GDEXS",
    "user": {
      "login": "devtooligan",
      "id": 71567643,
      "node_id": "MDQ6VXNlcjcxNTY3NjQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/71567643?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/devtooligan",
      "html_url": "https://github.com/devtooligan",
      "followers_url": "https://api.github.com/users/devtooligan/followers",
      "following_url": "https://api.github.com/users/devtooligan/following{/other_user}",
      "gists_url": "https://api.github.com/users/devtooligan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/devtooligan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/devtooligan/subscriptions",
      "organizations_url": "https://api.github.com/users/devtooligan/orgs",
      "repos_url": "https://api.github.com/users/devtooligan/repos",
      "events_url": "https://api.github.com/users/devtooligan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/devtooligan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T15:43:17Z",
    "updated_at": "2022-07-05T15:43:17Z",
    "author_association": "CONTRIBUTOR",
    "body": "I support giving devs access to lower level functionality specifically access to stack and JUMPs.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175209426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175254134",
    "html_url": "https://github.com/ethereum/solidity/issues/13247#issuecomment-1175254134",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
    "id": 1175254134,
    "node_id": "IC_kwDOAm_5kc5GDPR2",
    "user": {
      "login": "theNvN",
      "id": 42338831,
      "node_id": "MDQ6VXNlcjQyMzM4ODMx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42338831?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theNvN",
      "html_url": "https://github.com/theNvN",
      "followers_url": "https://api.github.com/users/theNvN/followers",
      "following_url": "https://api.github.com/users/theNvN/following{/other_user}",
      "gists_url": "https://api.github.com/users/theNvN/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theNvN/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theNvN/subscriptions",
      "organizations_url": "https://api.github.com/users/theNvN/orgs",
      "repos_url": "https://api.github.com/users/theNvN/repos",
      "events_url": "https://api.github.com/users/theNvN/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theNvN/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T16:29:48Z",
    "updated_at": "2022-07-05T16:29:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "I also favor a Yul+/Yul++ variant. This would be immensely beneficial for writing code where a manual high optimization is needed (e.g. in cryptography) that neither Solidity nor current Yul can provide. [weierstrudel](https://github.com/AztecProtocol/weierstrudel) by AztecProtocol is a good example - they had to write [huff](https://github.com/AztecProtocol/huff) lang for weierstrudel implementation to achieve that kind of optimization. Like @pcaversaccio said - I think it'd be nice to have another Yul version (Yul+/Yul++) that has access to stack-related opcodes (`PUSH`, `DUP`, `SWAP` etc) along with what Yul already has.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175254134/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175297584",
    "html_url": "https://github.com/ethereum/solidity/issues/13247#issuecomment-1175297584",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
    "id": 1175297584,
    "node_id": "IC_kwDOAm_5kc5GDZ4w",
    "user": {
      "login": "0xalpharush",
      "id": 87383155,
      "node_id": "MDQ6VXNlcjg3MzgzMTU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/87383155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xalpharush",
      "html_url": "https://github.com/0xalpharush",
      "followers_url": "https://api.github.com/users/0xalpharush/followers",
      "following_url": "https://api.github.com/users/0xalpharush/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xalpharush/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xalpharush/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xalpharush/subscriptions",
      "organizations_url": "https://api.github.com/users/0xalpharush/orgs",
      "repos_url": "https://api.github.com/users/0xalpharush/repos",
      "events_url": "https://api.github.com/users/0xalpharush/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xalpharush/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T17:03:33Z",
    "updated_at": "2022-07-05T17:08:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "With regards to a higher level intermediate representation, I think it would be ideal to go beyond Yul++ and use something that does not access memory/ storage directly a la [slithIR](https://github.com/crytic/slither/wiki/SlithIR). This is more conducive to analysis/ optimizations that are prohibitive or difficult to perform on Yul. \r\n\r\nMore broadly, I'm in favor of moving towards a multi-level representation that is progressively lowered. Ideally, this would be very modular and allow third-parties to write optimization passes or do source-to-source translation with greater ease.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175297584/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175310396",
    "html_url": "https://github.com/ethereum/solidity/issues/13247#issuecomment-1175310396",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
    "id": 1175310396,
    "node_id": "IC_kwDOAm_5kc5GDdA8",
    "user": {
      "login": "0age",
      "id": 37939117,
      "node_id": "MDQ6VXNlcjM3OTM5MTE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37939117?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0age",
      "html_url": "https://github.com/0age",
      "followers_url": "https://api.github.com/users/0age/followers",
      "following_url": "https://api.github.com/users/0age/following{/other_user}",
      "gists_url": "https://api.github.com/users/0age/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0age/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0age/subscriptions",
      "organizations_url": "https://api.github.com/users/0age/orgs",
      "repos_url": "https://api.github.com/users/0age/repos",
      "events_url": "https://api.github.com/users/0age/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0age/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T17:19:43Z",
    "updated_at": "2022-07-05T17:19:43Z",
    "author_association": "NONE",
    "body": "+1, Solidity needs a mechanism to rip out all the guard rails when necessary or the incentive to eject entirely becomes too great when maximal efficiency is required. ",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175310396/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175566355",
    "html_url": "https://github.com/ethereum/solidity/issues/13247#issuecomment-1175566355",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
    "id": 1175566355,
    "node_id": "IC_kwDOAm_5kc5GEbgT",
    "user": {
      "login": "ControlCplusControlV",
      "id": 44706811,
      "node_id": "MDQ6VXNlcjQ0NzA2ODEx",
      "avatar_url": "https://avatars.githubusercontent.com/u/44706811?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ControlCplusControlV",
      "html_url": "https://github.com/ControlCplusControlV",
      "followers_url": "https://api.github.com/users/ControlCplusControlV/followers",
      "following_url": "https://api.github.com/users/ControlCplusControlV/following{/other_user}",
      "gists_url": "https://api.github.com/users/ControlCplusControlV/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ControlCplusControlV/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ControlCplusControlV/subscriptions",
      "organizations_url": "https://api.github.com/users/ControlCplusControlV/orgs",
      "repos_url": "https://api.github.com/users/ControlCplusControlV/repos",
      "events_url": "https://api.github.com/users/ControlCplusControlV/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ControlCplusControlV/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-05T22:32:31Z",
    "updated_at": "2022-07-05T22:38:26Z",
    "author_association": "NONE",
    "body": "I think Yul++ makes the most sense name wise for this extension as Yul+ already exists although archived Yul++ would differentiate it from that (For example I have a Yul+ <-> Foundry repo which would populate when people are searching for this Yul extension). I do favor adding this though, especially as features like #9889  and many from Yul+ like `mstructs` would help make it easier to write Yul in a way that is easy to type and efficient to run while lower level controls help occupy the niche languages like Huff are moving into fill. I don't think lower levels should be differentiated with a name or different compiler like Yul-, rather adding `unsafe` blocks in a Yul extension, so that high level abstractions can be used where they make sense (so something like an mstruct), while compute intensive areas the guard-rails can be taken off to go faster (or the entire program can be in an unsafe block if wanted)",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1175566355/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1190041270",
    "html_url": "https://github.com/ethereum/solidity/issues/13247#issuecomment-1190041270",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13247",
    "id": 1190041270,
    "node_id": "IC_kwDOAm_5kc5G7pa2",
    "user": {
      "login": "krasi-georgiev",
      "id": 8903888,
      "node_id": "MDQ6VXNlcjg5MDM4ODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8903888?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/krasi-georgiev",
      "html_url": "https://github.com/krasi-georgiev",
      "followers_url": "https://api.github.com/users/krasi-georgiev/followers",
      "following_url": "https://api.github.com/users/krasi-georgiev/following{/other_user}",
      "gists_url": "https://api.github.com/users/krasi-georgiev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/krasi-georgiev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/krasi-georgiev/subscriptions",
      "organizations_url": "https://api.github.com/users/krasi-georgiev/orgs",
      "repos_url": "https://api.github.com/users/krasi-georgiev/repos",
      "events_url": "https://api.github.com/users/krasi-georgiev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/krasi-georgiev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-07-20T09:24:46Z",
    "updated_at": "2022-07-20T09:44:43Z",
    "author_association": "NONE",
    "body": "+1 for allowing jumps and labels\r\n\r\nI am trying to reverse a contract based on some pseudo code from the ethervm decompiler. \r\nIt generated the code with `goto` and labels so without jumps in yul can't think of any other to reverse a contract from.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1190041270/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]

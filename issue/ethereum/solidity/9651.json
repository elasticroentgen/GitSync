{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/9651",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/9651/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/9651/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/9651/events",
  "html_url": "https://github.com/ethereum/solidity/issues/9651",
  "id": 683434361,
  "node_id": "MDU6SXNzdWU2ODM0MzQzNjE=",
  "number": 9651,
  "title": "Strengthen storage variables being unassigned now that we have inline assembly",
  "user": {
    "login": "chriseth",
    "id": 9073706,
    "node_id": "MDQ6VXNlcjkwNzM3MDY=",
    "avatar_url": "https://avatars.githubusercontent.com/u/9073706?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/chriseth",
    "html_url": "https://github.com/chriseth",
    "followers_url": "https://api.github.com/users/chriseth/followers",
    "following_url": "https://api.github.com/users/chriseth/following{/other_user}",
    "gists_url": "https://api.github.com/users/chriseth/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/chriseth/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/chriseth/subscriptions",
    "organizations_url": "https://api.github.com/users/chriseth/orgs",
    "repos_url": "https://api.github.com/users/chriseth/repos",
    "events_url": "https://api.github.com/users/chriseth/events{/privacy}",
    "received_events_url": "https://api.github.com/users/chriseth/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2020-08-21T09:39:39Z",
  "updated_at": "2020-08-21T09:39:39Z",
  "closed_at": null,
  "author_association": "MEMBER",
  "active_lock_reason": null,
  "body": "Reported by @magnus237:\r\n\r\nThe following code does not report a warning because of the self-assignment:\r\n```\r\nfunction f() external pure {\r\n    string storage s1;\r\n    s1 = s1; // self-assignment\r\n    string storage s2 = s1;\r\n  }\r\n```\r\n\r\nNow that we have inline-assembly access to the slots, the following code would be a better (more explicit) way of saying \"please ignore the warning\":\r\n```\r\nfunction f() external pure {\r\n    string storage s1;\r\n    assembly { s1.slot := 0 }\r\n    string storage s2 = s1;\r\n  }\r\n```\r\n\r\nCan we change the control-flow-analyzer accordingly, i.e. do not take assignments from variables into account which are themselves not yet initialized?\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/9651/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/9651/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]

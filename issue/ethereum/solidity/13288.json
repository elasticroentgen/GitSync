{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13288",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13288/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13288/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13288/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13288",
  "id": 1313758457,
  "node_id": "I_kwDOAm_5kc5OTlz5",
  "number": 13288,
  "title": "Eliminate array bounds check for trivial case",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-07-21T20:20:36Z",
  "updated_at": "2022-07-21T20:20:36Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": "The following code seems to do the bounds check even though it is trivially unnecessary.\r\n\r\n```solidity\r\nuint[] memory a = new uint[](1);\r\na[0] = x;\r\n```\r\n\r\nIdeally the optimizer would also catch less trivial but apparently easy cases like for loops where the index is checked to be in bounds as part of the loop condition.\r\n\r\nRelated: https://github.com/ethereum/solidity/issues/9117",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13288/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13288/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]

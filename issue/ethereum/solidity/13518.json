{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13518",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13518/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13518/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13518/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13518",
  "id": 1369846508,
  "node_id": "I_kwDOAm_5kc5RpjLs",
  "number": 13518,
  "title": "Add support for `calldata` input and output in `abi.decode()`",
  "user": {
    "login": "k06a",
    "id": 702124,
    "node_id": "MDQ6VXNlcjcwMjEyNA==",
    "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/k06a",
    "html_url": "https://github.com/k06a",
    "followers_url": "https://api.github.com/users/k06a/followers",
    "following_url": "https://api.github.com/users/k06a/following{/other_user}",
    "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
    "organizations_url": "https://api.github.com/users/k06a/orgs",
    "repos_url": "https://api.github.com/users/k06a/repos",
    "events_url": "https://api.github.com/users/k06a/events{/privacy}",
    "received_events_url": "https://api.github.com/users/k06a/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [
    {
      "id": 785717317,
      "node_id": "MDU6TGFiZWw3ODU3MTczMTc=",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/language%20design%20:rage4:",
      "name": "language design :rage4:",
      "color": "9d76d3",
      "default": false,
      "description": "Any changes to the language, e.g. new features"
    },
    {
      "id": 4437999539,
      "node_id": "LA_kwDOAm_5kc8AAAABCIZ_sw",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/high%20effort",
      "name": "high effort",
      "color": "ff54f4",
      "default": false,
      "description": "A lot to implement but still doable by a single person. The task is large or difficult."
    },
    {
      "id": 4438492402,
      "node_id": "LA_kwDOAm_5kc8AAAABCI4E8g",
      "url": "https://api.github.com/repos/ethereum/solidity/labels/nice%20to%20have",
      "name": "nice to have",
      "color": "ffdeb3",
      "default": false,
      "description": "We don’t see a good reason not to have it but won’t go out of our way to implement it."
    }
  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 5,
  "created_at": "2022-09-12T12:43:08Z",
  "updated_at": "2022-09-12T17:22:32Z",
  "closed_at": null,
  "author_association": "NONE",
  "active_lock_reason": null,
  "body": "## Abstract\r\n\r\nCurrently `abi.decode()` works with `memory` argument and not with `calldata`, if `calldata` is provided it is being copied to memory and then decoded. Let's make `abi.decode()` to support both arguments and returns as `calldata`.\r\n\r\n## Motivation\r\n\r\n`Calldata` abstraction is cool, slicing is cool. We need `abi.decode()` to fully support decoding from `calldata` to `calldata`!\r\n\r\n## Specification\r\n\r\n```solidity\r\nfunction f(bytes calldata data) external {\r\n    (\r\n        address[] calldata targets,\r\n        bytes[] calldata calldatas\r\n    ) = abi.decode(data[1:], (address[], bytes[]));\r\n\r\n    // ...\r\n}\r\n```\r\n\r\n## Backwards Compatibility\r\n\r\n<!--\r\nAll language changes that introduce backwards incompatibilities must include a section describing these incompatibilities and their severity.\r\n\r\nPlease describe how you propose to deal with these incompatibilities.\r\n-->\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13518/reactions",
    "total_count": 4,
    "+1": 2,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 2
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13518/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243704519",
    "html_url": "https://github.com/ethereum/solidity/issues/13518#issuecomment-1243704519",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13518",
    "id": 1243704519,
    "node_id": "IC_kwDOAm_5kc5KIWzH",
    "user": {
      "login": "0xmikko",
      "id": 26343374,
      "node_id": "MDQ6VXNlcjI2MzQzMzc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26343374?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/0xmikko",
      "html_url": "https://github.com/0xmikko",
      "followers_url": "https://api.github.com/users/0xmikko/followers",
      "following_url": "https://api.github.com/users/0xmikko/following{/other_user}",
      "gists_url": "https://api.github.com/users/0xmikko/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/0xmikko/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/0xmikko/subscriptions",
      "organizations_url": "https://api.github.com/users/0xmikko/orgs",
      "repos_url": "https://api.github.com/users/0xmikko/repos",
      "events_url": "https://api.github.com/users/0xmikko/events{/privacy}",
      "received_events_url": "https://api.github.com/users/0xmikko/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-12T12:58:56Z",
    "updated_at": "2022-09-12T12:58:56Z",
    "author_association": "NONE",
    "body": "It could also add additional security because calldata is immutable, so no way to change data where it's not needed.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243704519/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243743227",
    "html_url": "https://github.com/ethereum/solidity/issues/13518#issuecomment-1243743227",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13518",
    "id": 1243743227,
    "node_id": "IC_kwDOAm_5kc5KIgP7",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-12T13:27:32Z",
    "updated_at": "2022-09-12T13:35:09Z",
    "author_association": "MEMBER",
    "body": "Just to clarify here: decoding *from* calldata (including slices) *does* work already (if it isn't for any case in which it should, let us know).\r\nEncoding *to* calldata types is an interesting idea! So the expectation here would be that the ``abi.decode`` call validates the outermost tuple (reverting on invalid data) and returns the appropriate calldata references, basically as if they had been function arguments (only relative to the given ``bytes calldata`` instead of ``msg.data[4:]``)?",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243743227/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243836879",
    "html_url": "https://github.com/ethereum/solidity/issues/13518#issuecomment-1243836879",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13518",
    "id": 1243836879,
    "node_id": "IC_kwDOAm_5kc5KI3HP",
    "user": {
      "login": "k06a",
      "id": 702124,
      "node_id": "MDQ6VXNlcjcwMjEyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/702124?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k06a",
      "html_url": "https://github.com/k06a",
      "followers_url": "https://api.github.com/users/k06a/followers",
      "following_url": "https://api.github.com/users/k06a/following{/other_user}",
      "gists_url": "https://api.github.com/users/k06a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k06a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k06a/subscriptions",
      "organizations_url": "https://api.github.com/users/k06a/orgs",
      "repos_url": "https://api.github.com/users/k06a/repos",
      "events_url": "https://api.github.com/users/k06a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k06a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-12T14:34:53Z",
    "updated_at": "2022-09-12T14:34:53Z",
    "author_association": "NONE",
    "body": "@ekpyron exactly. I assume implementing this feature would require reusing existing code of arguments decoding.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243836879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243998195",
    "html_url": "https://github.com/ethereum/solidity/issues/13518#issuecomment-1243998195",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13518",
    "id": 1243998195,
    "node_id": "IC_kwDOAm_5kc5KJefz",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-12T16:36:25Z",
    "updated_at": "2022-09-12T16:37:32Z",
    "author_association": "MEMBER",
    "body": "Currently, the return type of any function call is fully determined by the types of its arguments - so that'd be quite a step to break here (i.e. actually determine that the full ``abi.decode(...)`` expression is assigned to ``calldata`` types instead of ``memory`` types, and changing the semantics of the expression based on that).\r\n\r\nHowever, I wonder if there are any issues with actually *always* having ``abi.decode`` return calldata types (if given a first argument in calldata), since they should be assignable to memory types as well (which would then trigger the full copy) - if that works, that might be worthwhile. The main issue then would be that it might still change the revert semantics of a plain ``abi.decode`` that *doesn't* use the return arguments...",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1243998195/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1244059868",
    "html_url": "https://github.com/ethereum/solidity/issues/13518#issuecomment-1244059868",
    "issue_url": "https://api.github.com/repos/ethereum/solidity/issues/13518",
    "id": 1244059868,
    "node_id": "IC_kwDOAm_5kc5KJtjc",
    "user": {
      "login": "ekpyron",
      "id": 1347491,
      "node_id": "MDQ6VXNlcjEzNDc0OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1347491?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ekpyron",
      "html_url": "https://github.com/ekpyron",
      "followers_url": "https://api.github.com/users/ekpyron/followers",
      "following_url": "https://api.github.com/users/ekpyron/following{/other_user}",
      "gists_url": "https://api.github.com/users/ekpyron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ekpyron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ekpyron/subscriptions",
      "organizations_url": "https://api.github.com/users/ekpyron/orgs",
      "repos_url": "https://api.github.com/users/ekpyron/repos",
      "events_url": "https://api.github.com/users/ekpyron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ekpyron/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2022-09-12T17:22:32Z",
    "updated_at": "2022-09-12T17:22:32Z",
    "author_association": "MEMBER",
    "body": "So in general, the easiest solution to this would be to just change the return types of ``abi.decode`` with a calldata argument, to calldata types - that should directly solve this with near-zero effort - and I think this should all work now (there is a comment in the type checker code for ``abi.decode`` about the implementation of calldata types lacking and hence memory types being forced, but I think that's utterly outdated by now).\r\n\r\nThe problem with that approach, though, is that it's technically a breaking change :-).",
    "reactions": {
      "url": "https://api.github.com/repos/ethereum/solidity/issues/comments/1244059868/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }
]

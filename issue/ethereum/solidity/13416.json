{
  "url": "https://api.github.com/repos/ethereum/solidity/issues/13416",
  "repository_url": "https://api.github.com/repos/ethereum/solidity",
  "labels_url": "https://api.github.com/repos/ethereum/solidity/issues/13416/labels{/name}",
  "comments_url": "https://api.github.com/repos/ethereum/solidity/issues/13416/comments",
  "events_url": "https://api.github.com/repos/ethereum/solidity/issues/13416/events",
  "html_url": "https://github.com/ethereum/solidity/issues/13416",
  "id": 1343840478,
  "node_id": "I_kwDOAm_5kc5QGWDe",
  "number": 13416,
  "title": "Clarify effect of memory unsafe assembly",
  "user": {
    "login": "frangio",
    "id": 481465,
    "node_id": "MDQ6VXNlcjQ4MTQ2NQ==",
    "avatar_url": "https://avatars.githubusercontent.com/u/481465?v=4",
    "gravatar_id": "",
    "url": "https://api.github.com/users/frangio",
    "html_url": "https://github.com/frangio",
    "followers_url": "https://api.github.com/users/frangio/followers",
    "following_url": "https://api.github.com/users/frangio/following{/other_user}",
    "gists_url": "https://api.github.com/users/frangio/gists{/gist_id}",
    "starred_url": "https://api.github.com/users/frangio/starred{/owner}{/repo}",
    "subscriptions_url": "https://api.github.com/users/frangio/subscriptions",
    "organizations_url": "https://api.github.com/users/frangio/orgs",
    "repos_url": "https://api.github.com/users/frangio/repos",
    "events_url": "https://api.github.com/users/frangio/events{/privacy}",
    "received_events_url": "https://api.github.com/users/frangio/received_events",
    "type": "User",
    "site_admin": false
  },
  "labels": [

  ],
  "state": "open",
  "locked": false,
  "assignee": null,
  "assignees": [

  ],
  "milestone": null,
  "comments": 0,
  "created_at": "2022-08-19T02:10:00Z",
  "updated_at": "2022-08-19T02:10:17Z",
  "closed_at": null,
  "author_association": "CONTRIBUTOR",
  "active_lock_reason": null,
  "body": ">Therefore, moving stack variables to memory and additional memory optimizations are, by default, disabled in the presence of any inline assembly block that contains a memory operation or assigns to solidity variables in memory.\r\n\r\nCan you clarify what \"in the presence of\" means exactly? Are these optimizations _globally_ disabled for the entire contract if there is a memory unsafe block anywhere in it? Are they only disabled in the scope of the function body?\r\n\r\n",
  "closed_by": null,
  "reactions": {
    "url": "https://api.github.com/repos/ethereum/solidity/issues/13416/reactions",
    "total_count": 0,
    "+1": 0,
    "-1": 0,
    "laugh": 0,
    "hooray": 0,
    "confused": 0,
    "heart": 0,
    "rocket": 0,
    "eyes": 0
  },
  "timeline_url": "https://api.github.com/repos/ethereum/solidity/issues/13416/timeline",
  "performed_via_github_app": null,
  "state_reason": null
}
[

]
